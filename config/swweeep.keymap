#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include "mouse.dtsi"

#define DEFAULT 0
#define NAV     1
#define SYM     2
#define FUNC    3
#define MOUSE   4
#define NUMLFT  5
#define NUMRHT  6

&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};

/ {
    combos {
        compatible = "zmk,combos";
        combo_undo {
            timeout-ms = <50>;
            key-positions = <20 21>;
            bindings = <&kp LC(Z)>;
        };
    };
};

/ {

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        hs: homerow_shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
    &kp Q        &kp W        &kp E       &kp R         &lt NUMLFT T                                &lt NUMRHT Y  &kp U        &kp I         &kp O       &kp P
    &hs LSHIFT A   &hm LALT S   &hm LCTRL D  &hs LGUI F  &kp G                                       &kp H         &hm RGUI J &hm RCTRL K    &hm RALT L  &hs RSHIFT SQT
    &kp Z        &kp X        &kp C       &kp V         &kp B                                       &kp N         &kp M        &kp COMMA     &kp DOT     &kp FSLH
                                          &kp LSHIFT    &lt SYM TAB  &lt MOUSE SPACE  &kp ENTER   &lt NAV BSPC &lt FUNC COPY
            >;
        };

        nav_layer {
            bindings = <
    &kp INSERT      &kp N1    &kp N2      &kp N3     &kp MINUS                                      &kp HOME     &kp PG_UP       &kp UP        &kp PG_DN      &kp COLON
     &kp DELETE   &kp N4    &kp N5      &kp N6     &kp PLUS                                    &kp END     &kp LEFT       &kp DOWN      &kp RIGHT      &kp SEMI
    &caps_word   &kp N7    &kp N8      &kp N9     &kp N0                                      &trans   &trans       &trans        &trans      &trans
                                       &trans     &trans       &kp ESC       &trans           &trans     &trans
            >;
        };

        sym_layer {
            bindings = <
    &trans     &kp LBKT       &kp LBRC        &kp RBRC         &trans                                   &kp CARET     &kp LPAR          &kp RPAR     &kp RBKT   &kp TILDE
    &kp EXCL    &kp AT     &kp HASH        &kp DLLR         &kp PRCNT                                      &kp ASTRK        &kp MINUS          &kp EQUAL      &kp BSLH    &kp GRAVE
&trans       &trans       &trans          &trans           &trans                          &kp AMPS      &kp UNDER         &kp PLUS     &kp PIPE   &trans
                                              &trans           &trans       &trans        &trans       &trans        &trans
            >;
        };

        func_layer {
            bindings = <
 &sys_reset  &trans &trans  &trans     &bt BT_SEL 0                                   &kp C_MUTE       &kp F7       &kp F8        &kp F9      &sys_reset
    &bootloader &trans  &trans &trans     &bt BT_SEL 1                                   &kp K_VOL_UP     &kp F4       &kp F5        &kp F6      &bootloader
    &trans      &trans  &trans &bt BT_CLR &bt BT_SEL 2                                   &kp K_VOL_DN     &kp F1       &kp F2        &kp F3      &kp F12
                                            &trans  &trans    &trans      &kp C_PLAY_PAUSE  &trans           &trans
            >;
        };

        mouse_layer {
            bindings = <
     &trans       &trans       &trans        &trans            &trans                                      &trans         &msc SCRL_UP      &mmv MOVE_UP     &msc SCRL_DOWN    &trans
    &trans       &trans       &trans        &trans            &trans                                      &trans         &mmv MOVE_LEFT    &mmv MOVE_DOWN   &mmv MOVE_RIGHT   &trans
    &trans       &trans       &trans        &trans            &trans                                      &trans         &msc SCRL_LEFT    &trans           &msc SCRL_RIGHT   &trans
                                            &trans            &trans        &trans         &mkp MB1       &mkp MB2           &mkp MB3
            >;
        };

        numlft_layer {
            bindings = <
    &trans       &kp N1       &kp N2    &kp N3   &kp MINUS                                          &trans      &trans      &trans      &trans      &trans
    &trans       &kp N4       &kp N5    &kp N6   &kp PLUS                                           &trans      &trans      &trans      &trans      &trans
    &trans       &kp N7       &kp N8    &kp N9   &kp N0                                                &trans      &trans      &trans      &trans      &trans
                                        &trans      &trans          &trans           &trans          &trans      &trans
            >;
        };

        numrht_layer {
            bindings = <
    &trans       &trans       &trans       &trans        &trans                                      &trans      &kp N1       &kp N2        &kp N3      &kp MINUS
    &trans       &trans       &trans       &trans        &trans                                      &trans      &kp N4       &kp N5        &kp N6      &kp PLUS
    &trans       &trans       &trans       &trans        &trans                                      &trans      &kp N7       &kp N8        &kp N9      &kp N0
                                           &trans        &trans        &trans         &trans         &trans      &trans
            >;
        };
    };
};
